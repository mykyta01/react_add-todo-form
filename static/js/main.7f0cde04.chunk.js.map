{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","usersFromServer","find","cn","TodoList","todos","map","getNewTodoId","Math","max","App","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","todosFromServer","setTodos","action","method","onSubmit","event","preventDefault","trimmedTitle","trim","newTodo","currentTodos","addTodo","htmlFor","type","placeholder","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f0cde04.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user: { name, email } }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { UserInfo } from '../UserInfo';\nimport usersFromServer from '../../api/users';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const user = getUserById(todo.userId);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n      key={todo.id}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(({\n        id, title, completed, userId,\n      }) => (\n        <TodoInfo\n          todo={{\n            id,\n            title,\n            completed,\n            userId,\n          }}\n          key={id}\n        />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { Todo } from './types/Todo';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = { ...todo, id: getNewTodoId(todos) };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const trimmedTitle = title.trim();\n\n    if (!trimmedTitle && userId) {\n      setTitle('');\n      setHasTitleError(true);\n\n      return;\n    }\n\n    if (!trimmedTitle && !userId) {\n      setTitle('');\n      setHasTitleError(true);\n      setHasUserIdError(true);\n\n      return;\n    }\n\n    if (!title) {\n      setHasTitleError(true);\n    }\n\n    if (!userId) {\n      setHasUserIdError(true);\n    }\n\n    if (!title || !userId) {\n      return;\n    }\n\n    addTodo({\n      id: 0, title, completed: false, userId,\n    });\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"todo-title-id\">\n            Title:&nbsp;\n          </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"todo-title-id\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"todo-user-id\">\n            User:&nbsp;\n          </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"todo-user-id\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(({ id, name }) => (\n              <option value={id} key={id}>\n                {name}\n              </option>\n            ))}\n          </select>\n          {hasUserIdError\n          && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}